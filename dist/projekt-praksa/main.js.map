{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/forma/forma.component.ts","./src/app/forma/forma.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'projekt-praksa';\n}\n","<app-forma></app-forma>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\nimport { Proizvod } from '../entities/proizvod.entity';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-forma',\n  templateUrl: './forma.component.html',\n  styleUrls: ['./forma.component.css']\n})\nexport class FormaComponent implements OnInit {\n\n  SERVER_URL = \"./backend.php\";\n  proizvodi: Proizvod[];\n\n  constructor(private httpClient: HttpClient) {}\n\n  ngOnInit(){\n    this.proizvodi=[]; \n  }\n  dodajProizvod(){\n    this.proizvodi.push({naziv: \"\", kolicina: null, cijena: null});\n  }\n\n  ukupno(){\n    let suma = 0;\n    for(let proizvod of this.proizvodi){\n      suma += proizvod.cijena * proizvod.kolicina;\n    }\n    return suma;\n  }\n\n  pdv(){\n    return this.ukupno() * 0.25;\n  }\n\n  obrisiProizvod(index){\n    this.proizvodi.splice(index, 1);\n  }\n\n  danas(){\n    return new Date().toISOString().split('T')[0];\n  }\n\n  glavnaForma = new FormGroup({\n    nazivTvrtke: new FormControl('', [\n        Validators.required\n    ]),\n    brRacuna: new FormControl('',[\n        Validators.required,\n        Validators.pattern(\"^[0-9]*$\")\n    ]),\n    adresa: new FormControl('', [\n      Validators.required\n    ]),\n    maticniBroj: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\"^[0-9]*$\")\n    ]),\n    OIB: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\"^[0-9]*$\")\n    ]),\n    telefon: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\"^[0-9]*$\")\n    ]),\n    nazivTvrtkeKlijenta: new FormControl('', [\n      Validators.required\n    ]),\n    adresaTvrtkeKlijenta: new FormControl('', [\n      Validators.required\n    ]),\n    maticniBrojKlijenta: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\"^[0-9]*$\")\n    ]),\n    OIBKlijenta: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\"^[0-9]*$\")\n    ]),\n    modelPoziv: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\"^[0-9]*$\")\n    ]),\n    operater: new FormControl('', [\n      Validators.required\n    ]),\n    clanoviUprave: new FormControl('', [\n      Validators.required\n    ]),\n    temeljniKapital: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\"^[0-9]*$\")\n    ]),\n    sud: new FormControl('', [\n      Validators.required\n    ]),\n    nazivBanke: new FormControl('', [\n      Validators.required\n    ]),\n    IBAN: new FormControl('', [\n      Validators.required\n    ]),\n    SWIFTBIC: new FormControl('', [\n      Validators.required\n    ]),\n    datumRacuna: new FormControl('', [\n      Validators.required\n    ]),\n    datumIsporuke: new FormControl('', [\n      Validators.required\n    ]),\n    rokPlacanja: new FormControl('', [\n      Validators.required\n    ]),\n    JIRZKI: new FormControl('', [\n      Validators.required\n    ]),\n  });\n\n  files: File[] = [];\n\n\n\n  onSubmit(){\n    const formData = new FormData();\n    \n    // Dodaj sve proizvode u formData.\n    formData.append('proizvodi', JSON.stringify(this.proizvodi));\n\n    //Dodaj sve vrijednosti glavne kontrole u formData.\n    Object.keys(this.glavnaForma.controls).forEach(key=>{\n      formData.append(key, this.glavnaForma.get(key).value);\n    })\n\n    this.httpClient.post<any>(this.SERVER_URL, formData).subscribe(\n      \n      (res) => window.open(res),\n      (err) => console.log(err)\n    )\n  } \n}\n\n","<form action=\"\" [formGroup]=\"glavnaForma\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"container\">\n        \n        <div class=\"form-group\">\n            <div class=\"row justify-content-end\">\n                <div class=\"col-3\">\n                    <label for=\"nazivTvrtke\">Naziv Tvrtke</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.nazivTvrtke.errors && glavnaForma.controls.nazivTvrtke.touched}\"\n                        formControlName=\"nazivTvrtke\" id=\"nazivTvrtke\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.nazivTvrtke.errors && glavnaForma.controls.nazivTvrtke.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.nazivTvrtke.errors?.required\">\n                            Morate unijeti naziv tvrtke!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row justify-content-end\">\n                <div class=\"col-3\">\n                    <label for=\"adresa\">Adresa</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.adresa.errors && glavnaForma.controls.adresa.touched}\"\n                        formControlName=\"adresa\" id=\"adresa\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.adresa.invalid && glavnaForma.controls.adresa.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.adresa.errors?.required\">\n                            Morate unijeti adresu!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row justify-content-end\">\n                <div class=\"col-3\">\n                    <label for=\"maticniBroj\">Maticni Broj</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.maticniBroj.errors && glavnaForma.controls.maticniBroj.touched}\"\n                        formControlName=\"maticniBroj\" id=\"maticniBroj\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.maticniBroj.invalid && glavnaForma.controls.maticniBroj.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.maticniBroj.errors?.required\">\n                            Morate unijeti maticni broj!!\n                        </div>\n                        <div *ngIf=\"glavnaForma.controls.maticniBroj.errors?.pattern\">\n                            Maticni broj mora sadrzavati samo brojeve!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row justify-content-end\">\n                <div class=\"col-3\">\n                    <label for=\"OIB\">OIB</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.OIB.errors && glavnaForma.controls.OIB.touched}\"\n                        formControlName=\"OIB\" id=\"OIB\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.OIB.invalid && glavnaForma.controls.OIB.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.OIB.errors?.required\">\n                            Morate unijeti OIB!!\n                        </div>\n                        <div *ngIf=\"glavnaForma.controls.maticniBroj.errors?.pattern\">\n                            OIB mora sadrzavati samo brojeve!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"row justify-content-end\">\n                <div class=\"col-3\">\n                    <label for=\"telefon\">Telefon</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.telefon.errors && glavnaForma.controls.telefon.touched}\"\n                        formControlName=\"telefon\" id=\"telefon\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.telefon.invalid && glavnaForma.controls.telefon.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.telefon.errors?.required\">\n                            Morate unijeti telefonski broj!!\n                        </div>\n                        <div *ngIf=\"glavnaForma.controls.telefon.errors?.pattern\">\n                            Telefonski broj mora sadrzavati samo brojeve!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <hr />\n            <div class=\"row justify-content-start\">\n                <p>Kupac:</p>\n            </div>\n\n            <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <label for=\"nazivTvrtkeKlijenta\">Naziv Tvrtke Klijenta</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.nazivTvrtkeKlijenta.errors && glavnaForma.controls.nazivTvrtkeKlijenta.touched}\"\n                        formControlName=\"nazivTvrtkeKlijenta\" id=\"nazivTvrtkeKlijenta\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.nazivTvrtkeKlijenta.invalid && glavnaForma.controls.nazivTvrtkeKlijenta.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.nazivTvrtkeKlijenta.errors?.required\">\n                            Morate unijeti naziv tvrtke klijenta!!\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-4\">\n                    <label for=\"datumRacuna\">Datum Racuna</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.datumRacuna.errors && glavnaForma.controls.datumRacuna.touched}\"\n                        id=\"datumRacuna\" type=\"date\" value=\"{{danas()}}\" class=\"form-control\">\n                </div>\n            </div>\n\n\n            <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <label for=\"adresaTvrtkeKlijenta\">Adresa Tvrtke Klijenta</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.adresaTvrtkeKlijenta.errors && glavnaForma.controls.adresaTvrtkeKlijenta.touched}\"\n                        formControlName=\"adresaTvrtkeKlijenta\" id=\"adresaTvrtkeKlijenta\" type=\"text\"\n                        class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.adresaTvrtkeKlijenta.invalid && glavnaForma.controls.adresaTvrtkeKlijenta.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.adresaTvrtkeKlijenta.errors?.required\">\n                            Morate unijeti adresu tvrtke klijenta!!\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-4\">\n                    <label for=\"rokPlacanja\">Rok Placanja Racuna</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.rokPlacanja.errors && glavnaForma.controls.rokPlacanja.touched}\"\n                        id=\"rokPlacanja\" type=\"date\" class=\"form-control\">\n                </div>\n            </div>\n\n\n            <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <label for=\"maticniBrojKlijenta\">Maticni Broj Klijenta</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.maticniBrojKlijenta.errors && glavnaForma.controls.maticniBrojKlijenta.touched}\"\n                        formControlName=\"maticniBrojKlijenta\" id=\"maticniBrojKlijenta\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.maticniBrojKlijenta.invalid && glavnaForma.controls.maticniBrojKlijenta.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.maticniBrojKlijenta.errors?.required\">\n                            Morate unijeti maticni broj!!\n                        </div>\n                        <div *ngIf=\"glavnaForma.controls.maticniBrojKlijenta.errors?.pattern\">\n                            Maticni broj mora sadrzavati samo brojeve!!\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-4\">\n                    <label for=\"datumIsporuke\">Datum isporuke</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.datumIsporuke.errors && glavnaForma.controls.datumIsporuke.touched}\"\n                        id=\"datumIsporuke\" type=\"date\" class=\"form-control\">\n                </div>\n            </div>\n\n\n            <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <label for=\"OIBKlijenta\">OIB Klijenta</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.OIBKlijenta.errors && glavnaForma.controls.OIBKlijenta.touched}\"\n                        formControlName=\"OIBKlijenta\" id=\"OIBKlijenta\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.OIBKlijenta.invalid && glavnaForma.controls.OIBKlijenta.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.OIBKlijenta.errors?.required\">\n                            Morate unijeti OIB!!\n                        </div>\n                        <div *ngIf=\"glavnaForma.controls.OIBKlijenta.errors?.pattern\">\n                            OIB mora sadrzavati samo brojeve!!\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-4\">\n                    <label for=\"modelPoziv\">Model / Poziv na broj</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.modelPoziv.errors && glavnaForma.controls.modelPoziv.touched}\"\n                        formControlName=\"modelPoziv\" id=\"modelPoziv\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.modelPoziv.invalid && glavnaForma.controls.modelPoziv.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.modelPoziv.errors?.required\">\n                            Morate unijeti broj!!\n                        </div>\n                        <div *ngIf=\"glavnaForma.controls.modelPoziv.errors?.pattern\">\n                            Mora sadrzavati samo brojeve!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class=\"row justify-content-center my-5\">\n                <h1>Racun br.</h1> <input [ngClass]=\"{'is-invalid':glavnaForma.controls.brRacuna.errors && glavnaForma.controls.brRacuna.touched}\"\n                formControlName=\"brRacuna\" id=\"brRacuna\" type=\"number\" size=\"2\" name=\"brRacuna\">\n            </div>\n            <hr />\n\n            <table class=\"table table-hover table-sm\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Naziv</th>\n                        <th scope=\"col\">Cijena</th>\n                        <th scope=\"col\">Kolicina</th>\n                        <th scope=\"col\">Ukupno</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let proizvod of proizvodi; let i = index;\">\n                        <td><input class=\"form-control\" [ngModelOptions]=\"{standalone: true}\" type=\"text\"\n                                name=\"naziv{{i}}\" [(ngModel)]=\"proizvod.naziv\"></td>\n                        <td><input class=\"form-control\" [ngModelOptions]=\"{standalone: true}\" type=\"number\"\n                                name=\"kolicina{{i}}\" [(ngModel)]=\"proizvod.kolicina\"></td>\n                        <td><input class=\"form-control\" [ngModelOptions]=\"{standalone: true}\" type=\"number\"\n                                name=\"cijena{{i}}\" [(ngModel)]=\"proizvod.cijena\"></td>\n                        <td class=\"align-middle\"><strong>{{proizvod.cijena * proizvod.kolicina}}</strong></td>\n                        <td class=\"align-middle\" style=\"cursor:pointer;\" (click)=\"obrisiProizvod(i)\">&#10006;</td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <div class=\"row justify-content-center\">\n                <button (click)=\"dodajProizvod()\" class=\"btn btn-primary\" type=\"button\">Dodaj proizvod</button>\n            </div>\n\n            <hr />\n            <hr />\n\n            <div class=\"row justify-content-end\">\n                <p>Ukupno: {{ukupno()}}KM</p>\n            </div>\n\n            <div class=\"row justify-content-end\">\n                <p>PDV(25.00%): {{pdv()}}KM</p>\n            </div>\n\n            <div class=\"row justify-content-end\">\n                <p>Ukupno za platiti: {{ukupno() + pdv()}}KM</p>\n            </div>\n\n            <div class=\"row justify-content-start\">\n                <div class=\"col-4\">\n                    <label for=\"operater\">Operater / Racun izdao</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.operater.errors && glavnaForma.controls.operater.touched}\"\n                        formControlName=\"operater\" id=\"operater\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.operater.invalid && glavnaForma.controls.operater.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.operater.errors?.required\">\n                            Morate unijeti ime operatera!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row justify-content-start\">\n                <div class=\"col-4\">\n                    <p>Nacin placanja: transakcijski racun</p>\n                </div>\n            </div>\n\n            <div class=\"row justify-content-start\">\n                <div class=\"col-4\">\n                    <label for=\"JIRZKI\">JIR I ZKI</label>\n                    <input formControlName=\"JIRZKI\" id=\"JIRZKI\" class=\"form-control\" type=\"text\">\n                </div>\n            </div>\n\n            <hr />\n\n            <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <label for=\"clanoviUprave\">Clanovi Uprave</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.clanoviUprave.errors && glavnaForma.controls.clanoviUprave.touched}\"\n                        formControlName=\"clanoviUprave\" id=\"clanoviUprave\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.clanoviUprave.invalid && glavnaForma.controls.clanoviUprave.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.clanoviUprave.errors?.required\">\n                            Morate unijeti clanove uprave!!\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-4\">\n                    <label for=\"nazivBanke\">Naziv Banke</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.nazivBanke.errors && glavnaForma.controls.nazivBanke.touched}\"\n                        formControlName=\"nazivBanke\" id=\"nazivBanke\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.nazivBanke.invalid && glavnaForma.controls.nazivBanke.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.nazivBanke.errors?.required\">\n                            Morate unijeti naziv banke!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <label for=\"temeljniKapital\">Temeljni Kapital</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.temeljniKapital.errors && glavnaForma.controls.temeljniKapital.touched}\"\n                        formControlName=\"temeljniKapital\" id=\"temeljniKapital\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.temeljniKapital.invalid && glavnaForma.controls.temeljniKapital.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.temeljniKapital.errors?.required\">\n                            Morate unijeti temeljni kapital!!\n                        </div>\n                        <div *ngIf=\"glavnaForma.controls.temeljniKapital.errors?.pattern\">\n                            Temeljni kapital mora sadrzavati samo brojeve!!\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-4\">\n                    <label for=\"IBAN\">IBAN</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.IBAN.errors && glavnaForma.controls.IBAN.touched}\"\n                        formControlName=\"IBAN\" id=\"IBAN\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.IBAN.invalid && glavnaForma.controls.IBAN.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.IBAN.errors?.required\">\n                            Morate unijeti IBAN!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row justify-content-between\">\n                <div class=\"col-4\">\n                    <label for=\"sud\">Sud</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.sud.errors && glavnaForma.controls.sud.touched}\"\n                        formControlName=\"sud\" id=\"sud\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.sud.invalid && glavnaForma.controls.sud.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.sud.errors?.required\">\n                            Morate unijeti ime suda!!\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-4\">\n                    <label for=\"SWIFTBIC\">SWIFT/BIC</label>\n                    <input\n                        [ngClass]=\"{'is-invalid':glavnaForma.controls.SWIFTBIC.errors && glavnaForma.controls.SWIFTBIC.touched}\"\n                        formControlName=\"SWIFTBIC\" id=\"SWIFTBIC\" type=\"text\" class=\"form-control\">\n                    <div *ngIf=\"glavnaForma.controls.SWIFTBIC.invalid && glavnaForma.controls.SWIFTBIC.touched\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"glavnaForma.controls.SWIFTBIC.errors?.required\">\n                            Morate unijeti SWIFT/BIC!!\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n<hr />\n        <div class=\"row justify-content-center\">\n            <input type=\"submit\" class=\"btn btn-primary btn-large btn-success\" value=\"Unesi fakturu\">\n        </div>\n\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormaComponent } from './forma/forma.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormaComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}